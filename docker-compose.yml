# REF: https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/
# To build, and deploy
# docker-compose up -d --build
# remove from local system
# docker system prune -a
version: '3.7'

services:
  redis:
     image: "redis:alpine"
     volumes:
       - redis_data:/data

  backend:
    build: .
    command: gunicorn waterquality.wsgi:application --bind 0.0.0.0:8000
    container_name: app
    env_file:
      - ./.env
    environment:
      - VIRTUAL_PORT=8000
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - 8000
    depends_on:
      - redis

  celery-worker:
    build: .
    command: celery -A waterquality worker -l info
    env_file:
      - ./.env
    depends_on:
      - redis

  celery-beat:
    build: .
    command: celery -A waterquality beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - ./.env
    depends_on:
      - redis

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    env_file:
      - ./frontend/.env
    environment:
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
      - VIRTUAL_PORT=3000
    expose:
      - 3000

  blog:
    depends_on:
      - db
    image: wordpress:latest
    env_file:
      - ./.wp-env
    environment:
      WORDPRESS_DB_HOST: db

    volumes:
      - wordpress_data:/var/www/html
    expose:
      - 3000
    restart: always


  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - backend
      - frontend

volumes:
  static_volume:
  media_volume:
  html:
  vhost:
  redis_data:
  node_modules:
  wordpress_data:
